{
    "acl": {
        "isAvailable": true,
        "isFree": false,
        "isFreeForStudents": false,
        "productRequired": [
            "frontendexpert"
        ]
    },
    "category": "HTML",
    "contents": {
        "acl": {
            "isAvailable": true,
            "isFree": false,
            "isFreeForStudents": false,
            "productRequired": [
                "frontendexpert"
            ]
        },
        "category": "HTML",
        "hints": [
            "<p>\n  These are some of the most common semantic grouping tags \u2014\n  <span>&lt;header&gt;</span>, <span>&lt;article&gt;</span>,\n  <span>&lt;section&gt;</span>, <span>&lt;main&gt;</span>,\n  <span>&lt;footer&gt;</span>, <span>&lt;aside&gt;</span>. Which seem most\n  relevant here?\n</p>",
            "<p>\n  Since a blog post is a standalone piece of content, the most appropriate\n  semantic grouping tag to wrap it is the <span>article</span>. Then inside\n  of the blog post, <span>header</span>, <span>section</span> and\n  <span>footer</span> can be used for the various sections.\n</p>",
            "<p>\n  The <span>target=\"_blank\"</span> attribute can be added to anchor tags to\n  open links in new tabs.\n</p>"
        ],
        "languageToWrite": "html",
        "name": "Blog Post",
        "notes": "",
        "prompt": "<div class=\"html\">\n  <p>\n    You've been provided with a blog post as raw text, and you need to convert\n    this post into a properly marked-up HTML file.\n  </p>\n  <p>\n    The post should have a primary heading of\n    <span>Introducing AlgoCoin</span> with a tagline of\n    <span>The future of decentralized meme currency is here.</span>.\n  </p>\n  <p>\n    The post should be treated as an article with two sections, titled\n    <span>What is AlgoCoin</span> and <span>Where Do I Start?</span>,\n    respectively. Each section should have a paragraph of text (the text\n    directly below the respective section title in the starting code), and the\n    sections should be divided by a horizontal rule.\n  </p>\n  <p>\n    In the first section, the text\n    <span>proof-of-inverted-binary-tree consensus algorithm</span>\n    should be marked up as strong text, and <span>Web 4.0</span> should be\n    emphasized. In the second section, the word <span>AlgoExpert</span> should\n    be a link to <span>https://algoexpert.io</span>, and it should open in a new\n    tab.\n  </p>\n  <p>\n    Finally, the post should have a footer at the bottom with the text\n    <span>Copyright 3022 AlgoCoin. All rights reserved.</span>.\n  </p>\n  <p>\n    Your HTML code should use proper semantic markup. However, you only need to\n    write the HTML that would go inside of a document's\n    <span>&lt;body&gt;</span> tag; no need to worry about the\n    <span>&lt;head&gt;</span> tag, the <span>&lt;html&gt;</span> tag, or the\n    <span>&lt;!DOCTYPE&gt;</span> declaration.\n  </p>\n</div>",
        "promptCode": {
            "css": "body {\n  background-color: lightgrey;\n}"
        },
        "reactConfig": null,
        "solutions": {
            "html": [
                "<!--\nCopyright \u00a9 2023 AlgoExpert LLC. All rights reserved.\n-->\n\n<article>\n  <header>\n    <h1>Introducing AlgoCoin</h1>\n    <p>The future of decentralized meme currency is here.</p>\n  </header>\n\n  <section>\n    <h2>What is AlgoCoin?</h2>\n    <p>\n      AlgoCoin utilizes a revolutionary\n      <strong>proof-of-inverted-binary-tree consensus algorithm</strong>\n      that will absolutely transform the way we think about currency and\n      catapult the metaverse to its next major stage: <em>Web 4.0</em>.\n      Using AlgoCoin is simple. Instead of hoarding capital in wallets with\n      forgotten passwords, earn AlgoCoin at the time of usage through our unique\n      point-of-sale system. Each inverted binary tree equates to one AlgoCoin.\n      This means if your chicken tenders cost 420 AlgoCoin, all you need to do\n      is invert 420 binary trees.\n    </p>\n  </section>\n\n  <hr />\n\n  <section>\n    <h2>Where Do I Start?</h2>\n    <p>\n      Getting started with AlgoCoin is as easy as reversing a linked list. We\n      recommend starting out by practicing on\n      <a href=\"https://algoexpert.io\" target=\"_blank\">AlgoExpert</a>.\n      Next, once you feel you can invert binary trees as well as an\n      Ex-FAANG 10x engineer, it's time to ditch your fiat currency and enter\n      the future.\n    </p>\n  </section>\n\n  <footer>\n    <p>Copyright 3022 AlgoCoin. All rights reserved.</p>\n  </footer>\n</article>"
            ]
        },
        "startingCode": {
            "html": "<!-- Write your code here. -->\n\n<!-- Replace this text with HTML markup: -->\nIntroducing AlgoCoin\nThe future of decentralized meme currency is here.\n\nWhat is AlgoCoin?\nAlgoCoin utilizes a revolutionary proof-of-inverted-binary-tree consensus algorithm\nthat will absolutely transform the way we think about currency and catapult the\nmetaverse to its next major stage: Web 4.0. Using AlgoCoin is simple. Instead of\nhoarding capital in wallets with forgotten passwords, earn AlgoCoin at the time\nof usage through our unique point-of-sale system. Each inverted binary tree\nequates to one AlgoCoin. This means if your chicken tenders cost 420\nAlgoCoin, all you need to do is invert 420 binary trees.\n\nWhere Do I Start?\nGetting started with AlgoCoin is as easy as reversing a linked list. We\nrecommend starting out by practicing on AlgoExpert. Next, once you feel\nyou can invert binary trees as well as an Ex-FAANG 10x engineer, it's\ntime to ditch your fiat currency and enter the future.\n\nCopyright 3022 AlgoCoin. All rights reserved."
        },
        "submissionStatistics": {
            "correctCount": 4974,
            "failureCount": 2996
        },
        "testHarness": {
            "sandboxCode": "// This file is initialized with a few test cases.\n// Feel free to add, edit, or remove test cases in\n// this file as you see fit!\n\n/* ---------------------------------- *\n * ----- BROWSER TESTING SET-UP ----- *\n * ---------------------------------- */\nconst {JSDOM} = require('jsdom');\nconst {readFileSync} = require('fs');\nconst {expect} = require('chai');\n\nconst html = readFileSync('data/index.html');\n\nconst resetDom = () => {\n  const dom = new JSDOM(html, {\n    resources: 'usable',\n    pretendToBeVisual: true,\n  });\n\n  global.document = dom.window.document;\n  global.window = dom.window;\n};\n/* ---------------------------------- *\n * ----- BROWSER TESTING SET-UP ----- *\n * ---------------------------------- */\n\ndescribe('blog post', () => {\n  beforeEach(() => {\n    resetDom();\n  });\n\n  describe('markup', () => {\n    it('has correct text', () => {\n      const expectedTextContent =\n        \"Introducing AlgoCoin The future of \\\ndecentralized meme currency is here. What is AlgoCoin? AlgoCoin utilizes \\\na revolutionary proof-of-inverted-binary-tree consensus algorithm that \\\nwill absolutely transform the way we think about currency and catapult \\\nthe metaverse to its next major stage: Web 4.0. Using AlgoCoin is simple. \\\nInstead of hoarding capital in wallets with forgotten passwords, earn \\\nAlgoCoin at the time of usage through our unique point-of-sale system. \\\nEach inverted binary tree equates to one AlgoCoin. This means if your \\\nchicken tenders cost 420 AlgoCoin, all you need to do is invert 420 \\\nbinary trees. Where Do I Start? Getting started with AlgoCoin is as \\\neasy as reversing a linked list. We recommend starting out by practicing \\\non AlgoExpert. Next, once you feel you can invert binary trees as well \\\nas an Ex-FAANG 10x engineer, it's time to ditch your fiat currency and \\\nenter the future. Copyright 3022 AlgoCoin. All rights reserved.\";\n      expect(document.body.textContent.replace(/\\s\\s+/g, ' ').replace(/[\\n\\r]/g, ' ').trim()).to.equal(expectedTextContent);\n    });\n\n    it('has correct top level heading', () => {\n      const heading = document.querySelector('h1');\n      expect(heading.textContent.trim()).to.equal('Introducing AlgoCoin');\n    });\n\n    it('uses semantic grouping tags correctly for header', () => {\n      const header = document.querySelector('article > header');\n      expect(header.textContent.replace(/\\s\\s+/g, ' ').replace(/[\\n\\r]/g, ' ').trim()).to.equal(\n        'Introducing AlgoCoin The future of decentralized meme currency is here.',\n      );\n    });\n  });\n});\n",
            "unitTests": "/* ---------------------------------- *\n * ----- BROWSER TESTING SET-UP ----- *\n * ---------------------------------- */\nconst {JSDOM} = require('jsdom');\nconst {readFileSync} = require('fs');\nconst {expect} = require('chai');\n\nconst html = readFileSync('data/index.html');\n\nconst resetDom = () => {\n  const dom = new JSDOM(html, {\n    resources: 'usable',\n    pretendToBeVisual: true,\n  });\n\n  global.document = dom.window.document;\n  global.window = dom.window;\n};\n/* ---------------------------------- *\n * ----- BROWSER TESTING SET-UP ----- *\n * ---------------------------------- */\n\ndescribe('blog post', () => {\n  beforeEach(() => {\n    resetDom();\n  });\n\n  describe('markup', () => {\n    it('has correct text', () => {\n      const expectedTextContent =\n        \"Introducing AlgoCoin The future of \\\ndecentralized meme currency is here. What is AlgoCoin? AlgoCoin utilizes \\\na revolutionary proof-of-inverted-binary-tree consensus algorithm that \\\nwill absolutely transform the way we think about currency and catapult \\\nthe metaverse to its next major stage: Web 4.0. Using AlgoCoin is simple. \\\nInstead of hoarding capital in wallets with forgotten passwords, earn \\\nAlgoCoin at the time of usage through our unique point-of-sale system. \\\nEach inverted binary tree equates to one AlgoCoin. This means if your \\\nchicken tenders cost 420 AlgoCoin, all you need to do is invert 420 \\\nbinary trees. Where Do I Start? Getting started with AlgoCoin is as \\\neasy as reversing a linked list. We recommend starting out by practicing \\\non AlgoExpert. Next, once you feel you can invert binary trees as well \\\nas an Ex-FAANG 10x engineer, it's time to ditch your fiat currency and \\\nenter the future. Copyright 3022 AlgoCoin. All rights reserved.\";\n      expect(document.body.textContent.replace(/\\s\\s+/g, ' ').replace(/[\\n\\r]/g, ' ').trim()).to.equal(expectedTextContent);\n    });\n\n    it('has correct top level heading', () => {\n      const heading = document.querySelector('h1');\n      expect(heading.textContent.trim()).to.equal('Introducing AlgoCoin');\n    });\n\n    it('has correct secondary headings', () => {\n      const headings = document.querySelectorAll('h2');\n      expect(headings[0].textContent.trim()).to.equal('What is AlgoCoin?');\n      expect(headings[1].textContent.trim()).to.equal('Where Do I Start?');\n    });\n\n    it('uses strong tag correctly', () => {\n      const strongs = document.querySelectorAll('strong');\n      expect(strongs.length).to.equal(1);\n      expect(strongs[0].textContent.trim()).to.equal(\n        'proof-of-inverted-binary-tree consensus algorithm',\n      );\n    });\n\n    it('uses emphasis tag correctly', () => {\n      const ems = document.querySelectorAll('em');\n      expect(ems.length).to.equal(1);\n\n      // Allows period inside or outside of emphasis tag\n      expect(ems[0].textContent.trim().replace(/\\.$/, '')).to.equal('Web 4.0');\n    });\n\n    it('uses anchor tag correctly', () => {\n      const anchors = document.querySelectorAll('a');\n      expect(anchors.length).to.equal(1);\n\n      // Allows period inside or outside of anchor tag\n      expect(anchors[0].textContent.trim().replace(/\\.$/, '')).to.equal('AlgoExpert');\n\n      // Allow various versions of the link for simplicity\n      expect(anchors[0].href).to.be.oneOf([\n        'https://algoexpert.io',\n        'https://algoexpert.io/',\n        'https://www.algoexpert.io',\n        'https://www.algoexpert.io/',\n        'http://algoexpert.io',\n        'http://algoexpert.io/',\n        'http://www.algoexpert.io',\n        'http://www.algoexpert.io/',\n      ]);\n\n      expect(anchors[0].target).to.equal('_blank');\n    });\n\n    it('uses hr tag between sections', () => {\n      const hr = document.querySelector('hr');\n      expect(hr).to.exist;\n      expect(\n        hr.previousElementSibling.textContent\n          .replace(/\\s\\s+/g, ' ')\n          .trim()\n          .endsWith('all you need to do is invert 420 binary trees.'),\n      ).to.be.true;\n      expect(\n        hr.nextElementSibling.textContent\n          .replace(/\\s\\s+/g, ' ')\n          .trim()\n          .startsWith('Where Do I Start?'),\n      ).to.be.true;\n    });\n\n    it('uses article semantic grouping tag', () => {\n      const article = document.querySelector('article');\n      expect(article).to.exist;\n    });\n\n    it('uses semantic grouping tags correctly for header', () => {\n      const header = document.querySelector('article > header');\n      expect(header.textContent.replace(/\\s\\s+/g, ' ').replace(/[\\n\\r]/g, ' ').trim()).to.equal(\n        'Introducing AlgoCoin The future of decentralized meme currency is here.',\n      );\n    });\n\n    it('uses semantic grouping tags correctly for sections', () => {\n      const sectionGroupings = document.querySelectorAll('article > section, article > article');\n      expect(sectionGroupings.length).to.equal(2);\n\n      // Each section should have a heading inside of the section\n      Array.from(sectionGroupings).forEach(group => {\n        const headings = group.querySelectorAll('h1, h2, h3, h4, h5, h6');\n        expect(headings.length).to.equal(1);\n      });\n    });\n\n    it('uses semantic grouping tags correctly for footer', () => {\n      const footer = document.querySelector('footer');\n      expect(footer.textContent.trim()).to.equal('Copyright 3022 AlgoCoin. All rights reserved.');\n    });\n  });\n});\n"
        },
        "testStrategy": "MOCHA",
        "uid": "blog-post",
        "video": {
            "annotations": [],
            "codeWalkthroughTime": null,
            "duration": 0,
            "instructor": "Conner Ardman",
            "overviewTime": null,
            "vimeoId": "663497418"
        }
    },
    "difficulty": null,
    "instructor": "Conner Ardman",
    "name": "Blog Post",
    "releaseDate": "2022-01-07T00:00:00Z",
    "type": "CODING_FRONTEND",
    "uid": "blog-post"
}